{"version":3,"sources":["reducers/tasks.js","components/TextField/NewTask.js","actions/index.js","constants/actionTypes.js","components/MenuTaskOption/MenuTask.js","components/AppContainer.js","reducers/index.js","App.js","index.js"],"names":["initialState","task","listTasks","tasks","state","action","type","value","ContainerNewTask","styled","div","StyledTextField","TextField","StyledButton","Button","console","log","connect","dispatch","editTextTask","payload","props","label","placeholder","variant","onChange","event","target","color","ContainerMenu","ButtonMenu","MenuTask","Container","Title","h1","AppContainer","rootReducer","combineReducers","generateClassName","createGenerateClassName","jss","create","jssPreset","insertionPoint","document","getElementById","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","theme","createMuiTheme","App","ReactDOM","render"],"mappings":"o8BAAA,IAAMA,EAAe,CACpBC,KAAM,GACNC,UAAW,IA4BGC,EAzBD,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC/C,OAAQA,EAAOC,MACd,IAAK,YAEL,IAAK,aAEL,IAAK,iBAEL,IAAK,cACJ,OAAOF,EACR,IAAK,YACJ,OAAO,EAAP,GAAYA,EAAZ,CAAmBH,KAAMI,EAAOE,QACjC,IAAK,yBACJ,OAAOH,EACR,IAAK,WACJ,OAAO,EAAP,GAAYA,EAAZ,CAAmBF,UAAU,GAAD,mBAAME,EAAMF,WAAZ,CAAuBE,EAAMH,OAAOA,KAAM,KACvE,IAAK,gBAEL,IAAK,wBAEL,QACC,OAAOG,I,6ZCjBV,IAAMI,EAAmBC,IAAOC,IAAV,KAOhBC,EAAkBF,YAAOG,IAAPH,CAAH,KAOfI,EAAeJ,YAAOK,IAAPL,CAAH,KA2ClBM,QAAQC,IAAIb,EAAMF,MAEHgB,mBAdS,SAAAb,GACvB,MAAO,CACLH,KAAMG,EAAMD,MAAMF,SAIM,SAAAiB,GAC1B,MAAO,CACNC,aAAc,SAAAlB,GAAI,OAAIiB,ECHhB,CACNZ,KCxDuB,YDyDvBc,QAAS,CACRjB,MDA6CF,SAMjCgB,EAtCC,SAAAI,GAKf,OACC,kBAACb,EAAD,KACC,kBAACG,EAAD,CACCL,KAAK,OACLgB,MAAM,uBACNC,YAAY,kBACZhB,MAAOc,EAAMpB,KACbuB,QAAQ,WACRC,SAZmB,SAAAC,GACrBL,EAAMF,aAAaO,EAAMC,OAAOpB,UAa/B,kBAACM,EAAD,CACCW,QAAQ,YACRI,MAAM,WAFP,qB,sLGzCH,IAAMC,EAAgBpB,IAAOC,IAAV,KAIboB,EAAarB,YAAOK,IAAPL,CAAH,KAsBDsB,EAlBE,WAChB,OACC,kBAACF,EAAD,KACC,kBAACC,EAAD,gCACA,kBAACA,EAAD,CACCN,QAAQ,WAAWI,MAAM,aAD1B,SAGA,kBAACE,EAAD,CACCN,QAAQ,WAAWI,MAAM,aAD1B,aAGA,kBAACE,EAAD,CACCN,QAAQ,WAAWI,MAAM,aAD1B,aAGA,kBAACE,EAAD,4B,oUClBH,IAAME,EAAYvB,IAAOC,IAAV,KASTuB,EAAQxB,IAAOyB,GAAV,KAeIC,MAVf,WACC,OACC,kBAACH,EAAD,KACC,kBAACC,EAAD,eACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,QCnBYG,EAJKC,YAAgB,CACnClC,MAAOA,I,6WCUR,IAAM6B,EAAYvB,IAAOC,IAAV,KAMT4B,EAAoBC,oCACpBC,EAAMC,iB,yVAAO,IACfC,sBADc,CAGjBC,eAAgBC,SAASC,eAAe,0BAGnCC,EACLC,OAAOC,8BAAgCD,OAAOC,+BAEzCC,EAAQC,YAAYd,EAAaU,GAEjCK,EAAQC,2BAiBCC,MAff,WACC,OACC,kBAAC,IAAD,CAAUJ,MAAOA,GAChB,kBAAC,EAAD,KACC,kBAAC,IAAD,CAAaT,IAAKA,EAAKF,kBAAmBA,GACzC,kBAAC,mBAAD,CAAkBa,MAAOA,GACxB,kBAAC,IAAD,MACA,kBAAC,EAAD,WC9BNG,IAASC,OAEP,kBAAC,EAAD,MAEFX,SAASC,eAAe,W","file":"static/js/main.1a28d3fc.chunk.js","sourcesContent":["const initialState = {\n\ttask: '',\n\tlistTasks: [],\n};\n\nconst tasks = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase \"ALL_TASKS\":\n\t\t\treturn state;\n\t\tcase \"CHECK_TASK\":\n\t\t\treturn state;\n\t\tcase \"COMPLETE_TASKS\":\n\t\t\treturn state;\n\t\tcase \"DELETE_TASK\":\n\t\t\treturn state;\n\t\tcase \"EDIT_TASK\":\n\t\t\treturn { ...state, task: action.value }\n\t\tcase \"MARK_ALL_TASK_COMPLETE\":\n\t\t\treturn state;\n\t\tcase \"NEW_TASK\":\n\t\t\treturn { ...state, listTasks: [...state.listTasks, state.task], task: \"\" }\n\t\tcase \"PENDING_TASKS\":\n\t\t\treturn state;\n\t\tcase \"REMOVE_COMPLETE_TASKS\":\n\t\t\treturn state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default tasks;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux'\nimport { editTaskAction } from '../../actions'\nimport tasks from '../../reducers/tasks';\n\n\nconst ContainerNewTask = styled.div`\n\twidth: 80%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 20px;\n`\n\nconst StyledTextField = styled(TextField)`\n\tcolor: gray;\n\twidth: 100%;\n\t&:focus{\n\t\toutline: none\n\t}\n`\nconst StyledButton = styled(Button)`\n\twidth: 50%;\n\tmargin: 10px;\n\talign-self: center;\n`\n\n\nconst NewTask = props => {\n\tconst handleNewTask = event => {\n\t\tprops.editTextTask(event.target.value);\n\t};\n\t\n\treturn (\n\t\t<ContainerNewTask>\n\t\t\t<StyledTextField\n\t\t\t\ttype=\"text\"\n\t\t\t\tlabel=\"Crie uma nova tarefa\"\n\t\t\t\tplaceholder=\"digite a tarefa\"\n\t\t\t\tvalue={props.task}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tonChange={handleNewTask}\n\t\t\t\t/>\n\t\t\t<StyledButton\n\t\t\t\tvariant=\"contained\" \n\t\t\t\tcolor=\"primary\"\n\t\t\t> \n\t\t\tCriar Tarefa </StyledButton>\n\t\t</ContainerNewTask>\n\t)\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t  task: state.tasks.task\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\teditTextTask: task => dispatch(editTaskAction(task))\n\t};\n  };\n\nconsole.log(tasks.task);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTask);","import { NEW_TASK } from '../constants/actionTypes'\nimport { ALL_TASKS } from '../constants/actionTypes'\nimport { CHECK_TASK } from '../constants/actionTypes'\nimport { COMPLETE_TASKS } from '../constants/actionTypes'\nimport { DELETE_TASK } from '../constants/actionTypes'\nimport { EDIT_TASK } from '../constants/actionTypes'\nimport { MARK_ALL_TASK_COMPLETE } from '../constants/actionTypes'\nimport { PENDING_TASKS } from '../constants/actionTypes'\nimport { REMOVE_COMPLETE_TASKS } from '../constants/actionTypes'\n\n\n\n\nexport const newTasksAction = tasks =>  {\n\treturn {\n\t\ttype: NEW_TASK,\n\t\tpayload: {\n\t\t\ttasks: tasks,\n\t\t}\n\t}\n}\n\nexport const allTaskAction = tasks => {\n\treturn {\n\t\ttype: ALL_TASKS,\n\t\tpayload: {\n\t\t\ttasks: tasks,\n\t\t}\n\t}\n}\n\nexport const checkTaskAction = tasks => {\n\treturn {\n\t\ttype: CHECK_TASK,\n\t\tpayload: {\n\t\t\ttasks: tasks,\n\t\t}\n\t}\n}\n\nexport const completeTaskAction = tasks => {\n\treturn {\n\t\ttype: COMPLETE_TASKS,\n\t\tpayload: {\n\t\t\ttasks: tasks,\n\t\t}\n\t}\n}\n\nexport const deleteTaskAction = tasks => {\n\treturn {\n\t\ttype: DELETE_TASK,\n\t\tpayload: {\n\t\t\ttasks: tasks,\n\t\t}\n\t}\n}\n\nexport const editTaskAction = tasks => {\n\treturn {\n\t\ttype: EDIT_TASK,\n\t\tpayload: {\n\t\t\ttasks: tasks,\n\t\t\t\n\t\t}\n\t}\n}\n\nexport const markAllTaskAction = tasks => {\n\treturn {\n\t\ttype: MARK_ALL_TASK_COMPLETE,\n\t\tpayload: {\n\t\t\ttasks: tasks,\n\t\t}\n\t}\n}\n\nexport const pendingTaskAction = tasks => {\n\treturn {\n\t\ttype: PENDING_TASKS,\n\t\tpayload: {\n\t\t\ttasks: tasks,\n\t\t}\n\t}\n}\n\nexport const removeCompleteTaskAction = tasks => {\n\treturn {\n\t\ttype: REMOVE_COMPLETE_TASKS,\n\t\tpayload: {\n\t\t\ttasks: tasks,\n\t\t}\n\t}\n}\n\n","export const ALL_TASKS = \"ALL_TASKS\";\nexport const CHECK_TASK = \"CHECK_TASK\";\nexport const COMPLETE_TASKS = \"COMPLETE_TASK\";\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const EDIT_TASK = \"EDIT_TASK\";\nexport const MARK_ALL_TASK_COMPLETE = \"MARK_ALL_TASK_COMPLETE\";\nexport const NEW_TASK = \"NEW_TASK\";\nexport const PENDING_TASKS = \"PENDING_TASKS\";\nexport const REMOVE_COMPLETE_TASKS = \"REMOVE_COMPLETE_TASKS\";\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\n\nconst ContainerMenu = styled.div`\n\tdisplay: flex;\n\t\n`\nconst ButtonMenu = styled(Button)`\n\tmargin: 5px;\n\n`\nconst MenuTask = () => {\n\treturn (\n\t\t<ContainerMenu>\n\t\t\t<ButtonMenu>Marcar todas as tarefas</ButtonMenu>\n\t\t\t<ButtonMenu\n\t\t\t\tvariant=\"outlined\" color=\"secondary\"\n\t\t\t>Todas</ButtonMenu>\n\t\t\t<ButtonMenu\n\t\t\t\tvariant=\"outlined\" color=\"secondary\"\n\t\t\t>Pendentes</ButtonMenu>\n\t\t\t<ButtonMenu\n\t\t\t\tvariant=\"outlined\" color=\"secondary\"\n\t\t\t>Completas</ButtonMenu>\n\t\t\t<ButtonMenu>Remover completas</ButtonMenu>\n\t\t</ContainerMenu>\n\t)\n}\n\nexport default MenuTask;","import React from 'react';\nimport NewTask from './TextField/NewTask';\nimport MenuTask from './MenuTaskOption/MenuTask';\nimport styled from 'styled-components';\n\n\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tborder: 4px solid black;\n\tmargin: 20px;\n`\n\nconst Title = styled.h1`\n\tfont-size: 4rem;\n\tcolor: orange;\n\n`\nfunction AppContainer () {\n\treturn ( \n\t\t<Container>\n\t\t\t<Title>4Tasks</Title>\n\t\t\t<NewTask/>\n\t\t\t<MenuTask/>\n\t\t</Container>\n\t)\n}\n\nexport default AppContainer;","import { combineReducers } from 'redux';\nimport tasks from './tasks';\n\nconst rootReducer = combineReducers({\n\ttasks: tasks\n});\n\nexport default rootReducer;","import React from 'react'\nimport JssProvider from 'react-jss/lib/JssProvider'\nimport { create } from 'jss'\nimport { MuiThemeProvider, createGenerateClassName, jssPreset } from '@material-ui/core/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppContainer from './components/AppContainer'\nimport styled from 'styled-components'\nimport { Provider } from 'react-redux'\nimport { createStore } from \"redux\";\nimport rootReducer from './reducers';\n\n\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\t`\n\nconst generateClassName = createGenerateClassName()\nconst jss = create({\n\t...jssPreset(),\n\t// We define a custom insertion point that JSS will look for injecting the styles in the DOM.\n\tinsertionPoint: document.getElementById('jss-insertion-point'),\n})\n\nconst devTools =\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(rootReducer, devTools);\n\nconst theme = createMuiTheme()\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Container>\n\t\t\t\t<JssProvider jss={jss} generateClassName={generateClassName}>\n\t\t\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t\t<AppContainer />\n\t\t\t\t\t</MuiThemeProvider>\n\t\t\t\t</JssProvider>\n\t\t\t</Container>\n\t\t</Provider>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\n\n\n\n\n \n\nReactDOM.render(\n\t\n\t\t<App />,\n\t \ndocument.getElementById('root'))\n"],"sourceRoot":""}